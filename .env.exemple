#set this environment to database
DATABASE_HOST=  # set the host database to db if you are using the api container set 
# in docker. If you are not using the api container present in docker compose use localhost
DATABASE_USERNAME=  # set username database
DATABASE_PASSWORD=  # set password database
DATABASE_NAME=TransactionByClients  # set name database. If you want another name, remember to change it in the init.sql file.
DATABASE_PORT=  # set port database

NODE_ENV=   # set development, test or production
PORT=   # set port API

#set nivel logger 
LOG_RULES="context=AppController;level=debug/level=trace" # to unit tests
LOG_RULES="context=AppController;level=error" # to production


#auth API
JWT_TOKEN_SECRET= # set exemplo uuid
JWT_REFRESH_TOKEN_SECRET= # set exemplo uuid

# set this environment equal to example 
CHAR_CODE=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789

# elastic -- 
# obs: TO MAKE IT EASY, THE PORTS AND URLS FOR ELASTIC AND ITS MONITORING SERVICES
# TO OPERATE HAVE ALREADY BEEN CONFIGURED. IF YOU WANT TO CHANGE THEM,
# BE CAREFUL TO CONFIGURE THE PORTS AND URLS WITH THE SAME PORT NUMBER.

ELASTICSEARCH_PORT=9200  # set port elasticsearch
LOGSTASH_PORT=5044  # set port logstash
KIBANA_PORT=5601  # set port kibana
APM_SERVER_PORT=8200  # set port apm-server
ELASTICSEARCH_URL=http://elasticsearch:9200  # set url elasticsearch
ELASTIC_APM_SERVER_URL=http://apm-server:8200  # set url apm-server
KIBANA_URL=http://kibana:5601  # set url kibana
ELASTIC_LOGSTASH_URL=http://logstash:5044

services:
  db:
    image: postgres:15.3-alpine
    container_name: myPostgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - mynetwork
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"  
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.6.2
    container_name: filebeat
    restart: always
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  
      - ./logstash/my-app.log:/usr/src/logstash/my-app.log:ro 
      - ./logstash/transaction-reversal-audit.log:/usr/src/logstash/transaction-reversal-audit.log:ro 
      - ./logstash/transaction-audit.log:/usr/src/logstash/transaction-audit.log:ro 

    depends_on:
      - logstash
      - elasticsearch
      - kibana
    networks:
      - elk

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.4.2
    container_name: apm-server
    depends_on:
      - elasticsearch
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
    ports:
      - "8200:8200"
    command: >
      apm-server -e
      -E apm-server.host=0.0.0.0:8200
      -E setup.kibana.host=kibana:5601
  
  app:
    build: .
    container_name: myApp
    restart: always
    environment:
      DATABASE_HOST: ${DATABASE_HOST} 
      DATABASE_PORT: ${DATABASE_PORT} 
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      LOG_RULES: ${LOG_RULES}
      JWT_TOKEN_SECRET: ${JWT_TOKEN_SECRET}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET}
      CHAR_CODE: ${CHAR_CODE}
    ports:
      - "${PORT}:${PORT}" 
    depends_on:
      - db
    command: sh -c "sleep 10 && yarn start:dev" 
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
  elk:
    driver: bridge

volumes:
  pgdata:
  esData01:
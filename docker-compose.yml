version: '3.8'

services:
  db:
    image: postgres:15.3-alpine
    container_name: myPostgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - mynetwork

  app:
    build: .
    container_name: myApp
    restart: always
    environment:
      DATABASE_HOST: ${DATABASE_HOST} 
      DATABASE_PORT: ${DATABASE_PORT} 
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      LOG_RULES: ${LOG_RULES}
      JWT_TOKEN_SECRET: ${JWT_TOKEN_SECRET}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET}
      CHAR_CODE: ${CHAR_CODE}
    ports:
      - "${PORT}" 
    depends_on:
      - db
    command: sh -c "sleep 10 && yarn start:dev" 
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  pgdata:
services:
  db:
    image: postgres:15.3-alpine
    container_name: myPostgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - mynetwork
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.5
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks: 
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 20s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.5
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.monitoring.enabled=false
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"  
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.5
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.16.5
    container_name: filebeat
    restart: always
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  
      - ./logstash/my-app.log:/usr/src/logstash/my-app.log:ro
      - ./logstash/transaction-audit.log:/usr/src/logstash/transaction-audit.log:ro
      - ./logstash/transaction-reversal-audit.log:/usr/src/logstash/transaction-reversal-audit.log:ro
    depends_on:
      - logstash
      - elasticsearch
      - kibana
    networks:
      - elk

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.16.5
    container_name: apm-server
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_started
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
      - setup.kibana.host=http://kibana:5601
      - setup.template.enabled=true
      - setup.template.overwrite=true
      - setup.dashboards.enabled=true
      - apm-server.kibana.enabled=true
      - apm-server.rum.enabled=true
      - monitoring.enabled=true
      - monitoring.elasticsearch.hosts=["http://elasticsearch:9200"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8200:8200"
    networks:
      - elk

networks:
  mynetwork:
    driver: bridge
  elk:
    driver: bridge

volumes:
  pgdata:
  esData01: